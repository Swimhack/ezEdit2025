name: UI Tests

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      browser:
        description: 'Browser to run tests in'
        required: true
        default: 'chrome'
        type: choice
        options:
          - chrome
          - firefox
          - edge

jobs:
  cypress:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # Run tests across multiple browsers if manually triggered with workflow_dispatch
        browser: ${{ github.event_name == 'workflow_dispatch' && fromJSON(format('["{}"]", github.event.inputs.browser)) || ['chrome'] }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          
      - name: Install PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false
          
      - name: Get PNPM store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
          
      - name: Setup PNPM cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
          
      - name: Install dependencies
        run: pnpm install
        
      - name: Start local server
        run: pnpm dlx http-server ./public -p 3000 &
        
      - name: Wait for server
        run: sleep 5
        
      - name: Run Cypress tests
        uses: cypress-io/github-action@v6
        with:
          browser: ${{ matrix.browser }}
          config-file: cypress.config.js
          wait-on: 'http://localhost:3000'
          wait-on-timeout: 30
        env:
          CYPRESS_BASE_URL: http://localhost:3000
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Generate test report
        if: always()
        run: node run-ui-tests.js --report-only
        
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: cypress-results-${{ matrix.browser }}
          path: |
            cypress/screenshots
            cypress/videos
            cypress/reports
          retention-days: 30
          
      - name: Publish test report
        if: always()
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            try {
              const summary = JSON.parse(fs.readFileSync('./cypress/reports/test-summary.json'));
              const totalTests = summary.totalTests || 0;
              const passedTests = summary.totalPassed || 0;
              const failedTests = summary.totalFailed || 0;
              
              const conclusion = failedTests > 0 ? '❌ FAILED' : '✅ PASSED';
              const color = failedTests > 0 ? 'red' : 'green';
              
              const body = `## UI Test Results: ${conclusion}\n\n` +
                `- **Total Tests:** ${totalTests}\n` +
                `- **Passed:** ${passedTests}\n` +
                `- **Failed:** ${failedTests}\n\n` +
                `[View detailed report](${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID})`;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: body
              });
            } catch (error) {
              console.log('Error publishing test report:', error);
            }
          
  auto-merge:
    needs: cypress
    if: success() && github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: pascalgn/automerge-action@v0.16.3
        with:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          MERGE_LABELS: "automerge,!wip"
          MERGE_METHOD: "squash"
          MERGE_COMMIT_MESSAGE: "Auto-merge: UI tests passed ✅"
